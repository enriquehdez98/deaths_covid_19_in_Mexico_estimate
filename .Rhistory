geom_line(data=fit,
aes(y=fit, colour='Estimación ARIMA(4,1,1)'),
size=0.8)+
scale_x_continuous(breaks = seq(2005,2022,1))+
scale_colour_manual(values=c('steelblue','red'))+
labs(title = 'Fallecimientos semanales por COVID-19 reales vs estimados',
subtitle = 'en México del 2020 al 2022',
x='Fecha',
y='Falleciminetos semanales',
colour='Series')
plot(G1)
## Pruebas estadísticas del modelo
### Pruebas de auto-correlación
res_best_model <- residuals(best_model)
log10(124) # Rezagos optimos para realizar pruebas de autocorrelación
# Test Ljung-Box
Box.test(res_best_model, lag=2, type='Ljung-Box')
#Dado que el p-valor del Test Ljung-Box es 0.9734 y constrastado con un valor
#de significia del 0.05, no existe evidencia suficiente para rechazar H0,
#es decir que no existe correlación serial en los residuos
## Prueba de Box-Pierce
Box.test(res_best_model, lag=2, type= 'Box-Pierce')
#Dado que el p-valor del Test Box-Pierce es 0.9742 y constrastado con un valor
#de significia del 0.05,no existe evidencia suficiente para rechazar H0,
#es decir que no existe correlación serial en los residuos
## Función de autocorrelación simple
Acf(res_best_model, lag.max=24, plot=F) %>%
autoplot()+
scale_x_continuous(breaks = seq(1,24,1))+
labs(title = 'ACF de los residuales',
x=expression(k),
y=expression(rho))
# A pesar de que el grafico ACF muestras los resagos 12 y 13 fuera
# del intervalo de confianza, los estadisticos Box-Pierce y Ljung-Box, indican
# ausencia de autocorrelación en los rezagos, de tal modo que se
# asume que los residulos de modelo no presentan autocorrelacion serial
## Heterocedasticidad
### Prueba ARCH
library(aTSA)
arch.test(best_model)
### Residuales al cuadrado con ACF
Acf(res_best_model^2, lag.max=24, plot=F) %>%
autoplot()+
scale_x_continuous(breaks = seq(1,24,3))+
labs(title = 'ACF de los residuales al cuadrado',
x=expression(k),
y=expression(rho))
Box.test(res_best_model^2, lag=24, type='Ljung-Box')
## Normalidad de residuales
jarque.bera.test(res_best_model)
shapiro.test(res_best_model)
## Analizar la estacionariedad
tseries::adf.test(res_best_model)
tseries::pp.test(res_best_model)
tseries::kpss.test(res_best_model)
#Los residuos se comporta de manera estacionaria, ay que los estadisitcos
#ADF y PP rechazan la H0 de no estacionariedad, mientras que el test KPSS
#no hay suficiente evidencia para rechazar H0 de estacionariedad.
#De modo que aunque no existe normalidad en los residuos, si existe
#estacionariedad en los datos, es decir, se cumple el supuesto que
#media = cte, varianza= cte y cov proxima a cero
# Pronostico ----
fcast <- forecast::forecast(best_model, h=5, level=95)
print(fcast)
autoplot(fcast)
Estimado_arima <- c(1:6)
Estimado_arima[1] <- ts_newdeaths[126]
Estimado_arima[2:6] <- (fcast$mean)
Estimado_arima=Estimado_arima <-ts(data=Estimado_arima,
start = c(2022,22), end=c(2022,27),
frequency = 52)
Estimado_up<- (fcast$upper)
Estimado_down<- (fcast$lower)
Estimado_up=Estimado_up <-ts(data=Estimado_up,
start = c(2022,23), end=c(2022,27),
frequency = 52)
Estimado_down=Estimado_down <-ts(data=Estimado_down,
start = c(2022,23), end=c(2022,27),
frequency = 52)
ggplot()+
geom_line(data=ts_newdeaths, aes(x=time(ts_newdeaths), y=ts_newdeaths,
colour='Fallecimientos historicos'),size=0.8)+
geom_line(data=Estimado_arima,aes(x=time(Estimado_arima),y=Estimado_arima,
colour='Pronostico ARIMA(4,1,1)'),size=0.8)+
geom_ribbon(aes(x=time(Estimado_down), ymin=Estimado_down,
ymax=Estimado_up,fill = "Intervalo de confianza \nal 95%"), alpha = 0.3)+
scale_y_continuous(breaks = seq(min(covid_week$new_deaths),
max(covid_week$new_deaths),(100)))+
scale_colour_manual(values=c('steelblue','red'))+
scale_fill_manual("",values="grey12")+
labs(title = "Forecasting fallecimientos semanales por COVID-19 en México",
x='Fecha',
y='Fallecimientos',
colour='Series')
##############################
# Nota: Se selecciono el modelo 4, ya que cuenta con el menor AIC y RMSE
# Evaluación del modelo -----
library(lmtest)
## Revisión general
best_model <- mod4
Modelos <- c("Modelo 1: ARIMA (2,1,1)",
"Modelo 2: ARIMA (4,1,1)",
"Modelo A: ARIMA (2,1,0)")
Tabla_modelos <- data.frame(Modelos, AIC, RMSE)
print(Tabla_modelos)
fcast <- forecast::forecast(best_model, h=5, level=95)
print(fcast)
autoplot(fcast)
Estimado_arima <- c(1:6)
Estimado_arima[1] <- ts_newdeaths[126]
Estimado_arima[2:6] <- (fcast$mean)
Estimado_arima=Estimado_arima <-ts(data=Estimado_arima,
start = c(2022,22), end=c(2022,27),
frequency = 52)
Estimado_up<- (fcast$upper)
Estimado_down<- (fcast$lower)
Estimado_up=Estimado_up <-ts(data=Estimado_up,
start = c(2022,23), end=c(2022,27),
frequency = 52)
Estimado_down=Estimado_down <-ts(data=Estimado_down,
start = c(2022,23), end=c(2022,27),
frequency = 52)
autoplot(fcast)
# Graficando datos nuevos fallecimientos:
ggplot(data=covid_week, aes(x=date  , y=new_deaths))+
geom_line(colour="black")+
scale_x_date(date_breaks = "6 month",
date_labels = " %m-%Y")+
scale_y_continuous(breaks = seq(min(covid_week$new_deaths),
max(covid_week$new_deaths),(100)))+
geom_area(alpha=0.6)+
theme_minimal()+
labs(title="Nuevos fallecimentos semanales por COVID-19",
subtitle = "en Mexico del años 2020 al 2022",
caption = "Elaboración propia con con datos de Our World in Data COVID-19",
x="Fecha",
y="Número de fallecimientos")
### Estadisticos por año
covid_anio<-covid_week %>%
group_by(anio) %>%
summarise(min_anual=min(new_deaths),
max_anual=max(new_deaths),
prom_anual=mean(new_deaths),
std_anual=sd(new_deaths))
covid_anio
### Estadisticos por mes
covid_mensual<-covid_week %>%
group_by(mes_tex) %>%
summarise(min_anual=min(new_deaths),
max_anual=max(new_deaths),
prom_anual=mean(new_deaths),
std_anual=sd(new_deaths))
covid_mensual
#box plot
##covid_week %>%
ggplot()+
geom_boxplot(data=covid_week,aes(x=fct_relevel(mes_tex,"ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic."), y=new_deaths), fill="steelblue", color="black",
outlier.colour = "red")+
theme_minimal()+
labs(title = "Box-plot fallecimientos semanales por COVID-19",
subtitle = "en Mexico del años 2020 al 2022",
caption = "Elaboración propia con con datos de Our World in Data COVID-19",
x="Fecha",
y="Número de fallecimientos")
covid_week %>%
group_by(anio) %>%
ggplot(aes(x=anio, y=new_deaths))+
geom_boxplot(fill="steelblue", color="black",
outlier.colour = "red")+
theme_minimal()+
labs(title = "Box-plot fallecimientos semanales por COVID-19",
subtitle = "en Mexico del años 2020 al 2022",
caption = "Elaboración propia con con datos de Our World in Data COVID-19",
x="Fecha",
y="Número de fallecimientos")
library(statip)
library(modeest)
ggplot(covid_week, aes(new_deaths))+
geom_histogram(col="black", fill="red", alpha=0.4,
breaks=pretty(range(covid_week$new_deaths),
nclass.Sturges(covid_week$new_deaths),
min.n = 1))+
theme_minimal()+
geom_vline(xintercept = mean(covid_week$new_deaths),
color="black", linetype="dashed")+
geom_vline(xintercept = median(covid_week$new_deaths),
color="brown", linetype="dashed")+
geom_vline(xintercept = mfv(covid_week$new_deaths),
color="steelblue", linetype="dashed")+
labs(title = "Histograma fallecimientos semanales \npor Covid-19 del 2020 al 2022 en México",
x="Clases",
y="Frecuencia")
## Q-Q plot
ggplot(covid_week, aes(sample=new_deaths))+
stat_qq(color="#2E86C1")+
stat_qq_line(color="#C0392B", size=0.7)+
theme_minimal()+
labs(title = "Gráfico Q-Q fallecimientos semanales \npor Covid-19 del 2020 al 2022 en México")
jarque.bera.test(covid_week$new_deaths)
## Conviertiendo los datos en series de tiempo
ts_newdeaths<-ts(data=covid_week$new_deaths,
start = c(2020,1),
frequency = 52)
des_new_deaths<-decompose(ts_newdeaths)
plot(des_new_deaths)
ACF<-Acf(ts_newdeaths, lag.max=50, plot = F) %>%
autoplot()+
labs(title="A)",
subtitle = 'Función de correlación simple fallecimientos semanales\npor Covid-19 en México a niveles I(0)',
y=expression(rho),
x='k')+
scale_x_continuous(breaks = seq(0,50,5))
PACF<-Pacf(ts_newdeaths, lag.max=156, plot = F) %>%
autoplot()+
labs(title="B)",
subtitle = 'Función de correlación parcial fallecimientos semanales\npor Covid-19 en México a niveles I(0)',
y=expression(rho),
x='k')+
scale_x_continuous(breaks = seq(0,156,52))
ACF_PACF <- grid.arrange(ACF, PACF)
plot(ACF_PACF)
adf.test(ts_newdeaths)
#3. Prueba de Phillips-Perron.
pp.test(ts_newdeaths)
kpss.test(ts_newdeaths, null = "Trend")
ts_dif_newdeaths <- diff(ts_newdeaths)
fcast <- forecast::forecast(best_model, h=5, level=95)
print(fcast)
### Correcion
# Último valor de la serie original
ultimo_valor <- tail(ts_newdeaths, 1)
fcast <- ultimo_valor + cumsum(fcast$mean)
autoplot(fcast)
ultimo_valor
ultimo_valor
fcast <- forecast::forecast(best_model, h=5, level=95)
print(fcast)
# Coreccion #
# Ajustar acumulación de diferencias
Estimado_arima <- numeric(6)
Estimado_arima[1] <- ts_newdeaths[126]
Estimado_arima[2:6] <- Estimado_arima[1] + cumsum(fcast$mean)
Estimado_arima <- ts(data = Estimado_arima, start = c(2022, 22), frequency = 52)
# Intervalos de confianza
Estimado_up <- c(NA, fcast$upper[, 1])
Estimado_down <- c(NA, fcast$lower[, 1])
Estimado_up <- ts(data = Estimado_up, start = c(2022, 22), frequency = 52)
Estimado_down <- ts(data = Estimado_down, start = c(2022, 22), frequency = 52)
# Gráfico con ggplot2
library(ggplot2)
ggplot() +
geom_line(aes(x = time(ts_newdeaths), y = ts_newdeaths, colour = 'Fallecimientos históricos'), size = 0.8) +
geom_line(aes(x = time(Estimado_arima), y = Estimado_arima, colour = 'Pronóstico ARIMA(2,1,1)'), size = 0.8) +
geom_ribbon(aes(x = time(Estimado_down), ymin = Estimado_down, ymax = Estimado_up, fill = "Intervalo de confianza \nal 95%"), alpha = 0.3) +
scale_y_continuous(breaks = seq(0, max(covid_week$new_deaths, na.rm = TRUE), by = 100)) +
scale_colour_manual(values = c('steelblue', 'red')) +
scale_fill_manual("", values = "grey12") +
labs(
title = "Pronóstico de fallecimientos semanales por COVID-19 en México",
x = "Fecha",
y = "Número de fallecimientos",
colour = "Series"
)
fcast <- forecast::forecast(best_model, h=5, level=95)
print(fcast)
autoplot(fcast)
# Coreccion #
# Ajustar acumulación de diferencias
Estimado_arima <- numeric(6)
Estimado_arima[1] <- ts_newdeaths[126]
Estimado_arima[2:6] <- Estimado_arima[1] + cumsum(fcast$mean)
Estimado_arima <- ts(data = Estimado_arima, start = c(2022, 22), frequency = 52)
# Intervalos de confianza
Estimado_up <- c(NA, fcast$upper[, 1])
Estimado_down <- c(NA, fcast$lower[, 1])
Estimado_up <- ts(data = Estimado_up, start = c(2022, 22), frequency = 52)
Estimado_down <- ts(data = Estimado_down, start = c(2022, 22), frequency = 52)
# Gráfico con ggplot2
library(ggplot2)
ggplot() +
geom_line(aes(x = time(ts_newdeaths), y = ts_newdeaths, colour = 'Fallecimientos históricos'), size = 0.8) +
geom_line(aes(x = time(Estimado_arima), y = Estimado_arima, colour = 'Pronóstico ARIMA(2,1,1)'), size = 0.8) +
geom_ribbon(aes(x = time(Estimado_down), ymin = Estimado_down, ymax = Estimado_up, fill = "Intervalo de confianza \nal 95%"), alpha = 0.3) +
scale_y_continuous(breaks = seq(0, max(covid_week$new_deaths, na.rm = TRUE), by = 100)) +
scale_colour_manual(values = c('steelblue', 'red')) +
scale_fill_manual("", values = "grey12") +
labs(
title = "Pronóstico de fallecimientos semanales por COVID-19 en México",
x = "Fecha",
y = "Número de fallecimientos",
colour = "Series"
)
autoplot(fcast)
#Filtrando los datos de Mexico
data <- data[data$location=="Mexico",]
#Filtrando datos de interes:
covid_mx <- select(data, date, new_deaths)
covid_mx <- covid_mx[1:1678,] ## Limita la fecha hasta el día 30/may/22
#date =columna de fecha desde 01/01/2020 hasta hoy con frecuencia diaria
#new_deaths = número de muerte diarias por covid-19 en México
#new_cases  =  número de casos positivos nuevos de covid-19 en México
#people_vaccinated =número de personas vacunas con al menos una dosis o más
# contra el covid
View(covid_mx)
print("Número de valores nulos:")
print(sum(is.na(covid_mx$new_deaths)))
i=0;
for (i in 1:nrow(covid_mx)){
for (name in colnames(covid_mx)){
if (i==1 & name!="date"){
covid_mx[1,name]=0;
}else{
if(is.na(covid_mx[i,name])==TRUE  & is.na(covid_mx[i+1,name]==TRUE) ){
covid_mx[i,name]=covid_mx[i-1,name]
}
if(is.na(covid_mx[i,name]==TRUE)  & is.na(covid_mx[i+1,name])==FALSE ){
covid_mx[i,name]= round(((covid_mx[i-1,name])+(covid_mx[i+1,name]))/2)
}
}
}
}
covid_mx <- covid_mx %>%
mutate(week=tsibble::yearweek(covid_mx$date))
covid_week <- covid_mx %>%
group_by(week) %>%
summarise(new_deaths=round(mean(new_deaths)))
date_sistema = as.Date(("2024-08-04"))
covid_week <- covid_week %>%
mutate(date=seq(as.Date(covid_mx$date[1]),date_sistema,by="week"))
covid_week<-covid_week %>%
mutate(anio=format(date, "%Y"),
mes_tex=format(date,"%b"))
# Graficando datos nuevos fallecimientos:
ggplot(data=covid_week, aes(x=date  , y=new_deaths))+
geom_line(colour="black")+
scale_x_date(date_breaks = "6 month",
date_labels = " %m-%Y")+
scale_y_continuous(breaks = seq(min(covid_week$new_deaths),
max(covid_week$new_deaths),(100)))+
geom_area(alpha=0.6)+
theme_minimal()+
labs(title="Nuevos fallecimentos semanales por COVID-19",
subtitle = "en Mexico del años 2020 al 2022",
caption = "Elaboración propia con con datos de Our World in Data COVID-19",
x="Fecha",
y="Número de fallecimientos")
### Estadisticos por año
covid_anio<-covid_week %>%
group_by(anio) %>%
summarise(min_anual=min(new_deaths),
max_anual=max(new_deaths),
prom_anual=mean(new_deaths),
std_anual=sd(new_deaths))
covid_anio
### Estadisticos por mes
covid_mensual<-covid_week %>%
group_by(mes_tex) %>%
summarise(min_anual=min(new_deaths),
max_anual=max(new_deaths),
prom_anual=mean(new_deaths),
std_anual=sd(new_deaths))
covid_mensual
#box plot
##covid_week %>%
ggplot()+
geom_boxplot(data=covid_week,aes(x=fct_relevel(mes_tex,"ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic."), y=new_deaths), fill="steelblue", color="black",
outlier.colour = "red")+
theme_minimal()+
labs(title = "Box-plot fallecimientos semanales por COVID-19",
subtitle = "en Mexico del años 2020 al 2022",
caption = "Elaboración propia con con datos de Our World in Data COVID-19",
x="Fecha",
y="Número de fallecimientos")
covid_week %>%
group_by(anio) %>%
ggplot(aes(x=anio, y=new_deaths))+
geom_boxplot(fill="steelblue", color="black",
outlier.colour = "red")+
theme_minimal()+
labs(title = "Box-plot fallecimientos semanales por COVID-19",
subtitle = "en Mexico del años 2020 al 2022",
caption = "Elaboración propia con con datos de Our World in Data COVID-19",
x="Fecha",
y="Número de fallecimientos")
library(statip)
library(modeest)
ggplot(covid_week, aes(new_deaths))+
geom_histogram(col="black", fill="red", alpha=0.4,
breaks=pretty(range(covid_week$new_deaths),
nclass.Sturges(covid_week$new_deaths),
min.n = 1))+
theme_minimal()+
geom_vline(xintercept = mean(covid_week$new_deaths),
color="black", linetype="dashed")+
geom_vline(xintercept = median(covid_week$new_deaths),
color="brown", linetype="dashed")+
geom_vline(xintercept = mfv(covid_week$new_deaths),
color="steelblue", linetype="dashed")+
labs(title = "Histograma fallecimientos semanales \npor Covid-19 del 2020 al 2022 en México",
x="Clases",
y="Frecuencia")
## Q-Q plot
ggplot(covid_week, aes(sample=new_deaths))+
stat_qq(color="#2E86C1")+
stat_qq_line(color="#C0392B", size=0.7)+
theme_minimal()+
labs(title = "Gráfico Q-Q fallecimientos semanales \npor Covid-19 del 2020 al 2022 en México")
jarque.bera.test(covid_week$new_deaths)
## Conviertiendo los datos en series de tiempo
ts_newdeaths<-ts(data=covid_week$new_deaths,
start = c(2020,1),
frequency = 52)
des_new_deaths<-decompose(ts_newdeaths)
plot(des_new_deaths)
ACF<-Acf(ts_newdeaths, lag.max=50, plot = F) %>%
autoplot()+
labs(title="A)",
subtitle = 'Función de correlación simple fallecimientos semanales\npor Covid-19 en México a niveles I(0)',
y=expression(rho),
x='k')+
scale_x_continuous(breaks = seq(0,50,5))
PACF<-Pacf(ts_newdeaths, lag.max=156, plot = F) %>%
autoplot()+
labs(title="B)",
subtitle = 'Función de correlación parcial fallecimientos semanales\npor Covid-19 en México a niveles I(0)',
y=expression(rho),
x='k')+
scale_x_continuous(breaks = seq(0,156,52))
ACF_PACF <- grid.arrange(ACF, PACF)
plot(ACF_PACF)
adf.test(ts_newdeaths)
#3. Prueba de Phillips-Perron.
pp.test(ts_newdeaths)
kpss.test(ts_newdeaths, null = "Trend")
ts_dif_newdeaths <- diff(ts_newdeaths)
dif_newdeaths <- data.frame(date=covid_week$date[2:nrow(covid_week)],
ts_dif_newdeaths)
ggplot(data=dif_newdeaths, aes(x=date, y=ts_dif_newdeaths))+
geom_line(colour="black")+
scale_x_date(date_breaks = "6 month",
date_labels = " %m-%Y")+
theme_minimal()+
labs(title="Nuevos fallecimentos semanales por COVID-19\ndel 2020 al 2022 en México",
subtitle = "Serie de tiempo con primera diferencia I(1)",
caption = "Elaboración propia con con datos de Our World in Data COVID-19",
x="Fecha",
y="Número de fallecimientos")
ACF<-Acf(ts_dif_newdeaths, lag.max=50, plot = F) %>%
autoplot()+
labs(title= 'A)',
subtitle = 'Función de correlación simple fallecimientos semanales\npor Covid-19 en México I(1)',
y=expression(rho),
x='k')+
scale_x_continuous(breaks = seq(0,50,5))
PACF<-Pacf(ts_dif_newdeaths, lag.max=156, plot = F) %>%
autoplot()+
labs(title= 'B)',
subtitle = 'Función de correlación simple fallecimientos semanales\npor Covid-19 en México I(1)',
y=expression(rho),
x='k')+
scale_x_continuous(breaks = seq(0,156,52))
ACF_PACF <- grid.arrange(ACF, PACF)
plot(ACF_PACF)
adf.test(ts_dif_newdeaths)
#3. Prueba de Phillips-Perron.
pp.test(ts_dif_newdeaths)
kpss.test(ts_dif_newdeaths, null = "Level")
ggseasonplot(ts_newdeaths, year.labels = TRUE,
year.labels.left = TRUE,
main='Analisis de estacionalidad nuevos fallecimientos COVID-19
en México')
ggseasonplot(ts_dif_newdeaths, year.labels = TRUE,
year.labels.left = TRUE,
main='Analisis de estacionalidad nuevos fallecimientos
por COVID-19 en México')
ggseasonplot(ts_newdeaths, year.labels = TRUE,
year.labels.left = TRUE,
main='Analisis de estacionalidad nuevos fallecimientos COVID-19
en México')
ggseasonplot(ts_dif_newdeaths, year.labels = TRUE,
year.labels.left = TRUE,
main='Analisis de estacionalidad nuevos fallecimientos
por COVID-19 en México')
fcast <- forecast::forecast(best_model, h=5, level=95)
print(fcast)
autoplot(fcast)
# Coreccion #
# Ajustar acumulación de diferencias
Estimado_arima <- numeric(6)
Estimado_arima[1] <- ts_newdeaths[126]
Estimado_arima[2:6] <- Estimado_arima[1] + cumsum(fcast$mean)
Estimado_arima <- ts(data = Estimado_arima, start = c(2022, 22), frequency = 52)
# Intervalos de confianza
Estimado_up <- c(NA, fcast$upper[, 1])
Estimado_down <- c(NA, fcast$lower[, 1])
Estimado_up <- ts(data = Estimado_up, start = c(2022, 22), frequency = 52)
Estimado_down <- ts(data = Estimado_down, start = c(2022, 22), frequency = 52)
# Gráfico con ggplot2
library(ggplot2)
ggplot() +
geom_line(aes(x = time(ts_newdeaths), y = ts_newdeaths, colour = 'Fallecimientos históricos'), size = 0.8) +
geom_line(aes(x = time(Estimado_arima), y = Estimado_arima, colour = 'Pronóstico ARIMA(2,1,1)'), size = 0.8) +
geom_ribbon(aes(x = time(Estimado_down), ymin = Estimado_down, ymax = Estimado_up, fill = "Intervalo de confianza \nal 95%"), alpha = 0.3) +
scale_y_continuous(breaks = seq(0, max(covid_week$new_deaths, na.rm = TRUE), by = 100)) +
scale_colour_manual(values = c('steelblue', 'red')) +
scale_fill_manual("", values = "grey12") +
labs(
title = "Pronóstico de fallecimientos semanales por COVID-19 en México",
x = "Fecha",
y = "Número de fallecimientos",
colour = "Series"
)
